{"version":3,"sources":["../lib/time.js","../lib/index.js","../lib/transition.js","../lib/DatePickerItem.js","../lib/DatePicker.js","../lib/Modal.js"],"names":["convertDate","date","formate","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","replace","throwIfInvalidDate","Object","prototype","toString","call","Error","nextYear","now","index","arguments","length","undefined","Date","nextMonth","nextDate","getTime","type","units","result","parseInt","EnhanceDatePicker","_ref","isOpen","props","objectWithoutProperties","React","display","DatePicker","ModalDatePicker","TRANSITION","TRANSITIONEND","TRANSITION_CSS","document","body","style","transition","webkitTransition","TRANSFORM","TRANSFORM_CSS","transform","webkitTransform","DatePickerItem","_Component","this","animating","touchY","angle","renderDatepickerItem","_this","bind","handleContentTouch","handleContentTransitionEnd","state","componentWillMount","dates","Array","apply","map","value","TimeUtil","_this2","typeName","TimeUtil.getTime","setState","componentWillReceiveProps","nextProps","scroll","refs","nowVal","nextVal","nowstamp","timestamp","nextstamp","direction","_moveTo","_setOpacity","_clearTransition","obj","_moveToNext","_props","maxDate","minDate","canMove","onSelect","event","preventDefault","targetTouches","pageY","dir","_touchY","changedTouches","_dir","touchLen","newDates","_this3","itemStyle","_itemStyle","opacity","color","dateColor","suffix","render","scrollStyle","_scrollStyle","Component","propTypes","PropTypes","object","string","number","func","_productDate","handleFinishBtnClick","handleDateSelect","nDate","layerBackground","btnColor","_state","datePickerStyle","className","renderSubtreeIntoContainer","ReactDOM","unstable_renderSubtreeIntoContainer","Modal","componentDidMount","_div","createElement","classList","add","appendChild","renderPortal","newProps","componentWillUnmount","unmountComponentAtNode","parentNode","removeChild","portal","cloneElement","children","_extends","key","node","bool","defaultProps"],"mappings":"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","file":"react-mobile-datepicker.min.js","sourcesContent":["/**\n * @module time工具\n */\n\nexport function convertDate(date, formate) {\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n    const day = date.getDate();\n    const hour = date.getHours();\n    const minute = date.getMinutes();\n    const second = date.getSeconds();\n\n    return formate\n         .replace(/Y+/, year)\n         .replace(/M+/, month)\n         .replace(/D+/, day)\n         .replace(/h+/, hour)\n         .replace(/m+/, minute)\n         .replace(/s+/, second);\n}\n\nfunction throwIfInvalidDate(date) {\n    if (Object.prototype.toString.call(date, null) !== '[object Date]') {\n        throw new Error('参数类型不对');\n    }\n}\n\n\n/**\n * 获取相对日期的偏移日期\n * @param  {Date}       日期\n * @return {number}     相对的天数\n */\nexport function nextYear(now, index = 0) {\n    throwIfInvalidDate(now);\n    const date = new Date(now.getFullYear() + index, now.getMonth(), now.getDate());\n    return date;\n}\n\nexport function nextMonth(now, index = 0) {\n    throwIfInvalidDate(now);\n    const date = new Date(now.getFullYear(), now.getMonth() + index, now.getDate());\n    return date;\n}\n\nexport function nextDate(now, index = 0) {\n    throwIfInvalidDate(now);\n    const date = new Date(now.getFullYear(), now.getMonth(), now.getDate() + index);\n    return date;\n}\n\n\n/**\n * 获取指定日期年，月或日\n * @param  {Date}     日期\n * @return {String}   格式化日期名称\n */\nexport function getTime(date, type) {\n    throwIfInvalidDate(date);\n    const units = {\n        Year: ['YYYY', '年'],\n        Month: ['MM', '月'],\n        Date: ['DD', '日'],\n    };\n\n    if (!units[type]) throw new Error('类型不对');\n\n    const result = {\n        value: parseInt(convertDate(date, units[type][0]), 10),\n        suffix: units[type][1],\n    };\n    return result;\n}\n","import './index.css';\nimport React, { PropTypes } from 'react';\nimport DatePicker from './DatePicker.js';\nimport Modal from './Modal.js';\n\n\nfunction EnhanceDatePicker({ isOpen, ...props }) {\n    return (\n        <div\n            style={{ display: isOpen ? '' : 'none' }}\n            className=\"datepicker-modal\">\n            <DatePicker {...props} />\n        </div>\n    );\n}\n\n\nfunction ModalDatePicker(props) {\n    return (\n        <Modal {...props}>\n            <EnhanceDatePicker />\n        </Modal>\n    );\n}\n\nModalDatePicker.propTypes = {\n    isOpen: PropTypes.bool,\n    touchLen: PropTypes.number,\n    btnColor: PropTypes.string,\n    dateColor: PropTypes.string,\n    layerBackground: PropTypes.string,\n    date: PropTypes.object,\n    minDate: PropTypes.object,\n    maxDate: PropTypes.object,\n    onSelect: PropTypes.func,\n};\n\nModalDatePicker.defaultProps = {\n    touchLen: 40,\n    dateColor: '#fff',\n    btnColor: '#fff',\n    layerBackground: '#ffa70b',\n    isOpen: false,\n    date: new Date(),\n    minDate: new Date(1970, 0, 1),\n    maxDate: new Date(2050, 0, 1),\n    onSelect: () => {},\n};\n\nexport default ModalDatePicker;\n","let TRANSITION = null;\nlet TRANSITIONEND = null;\nlet TRANSITION_CSS = null;\nif (typeof document.body.style.transition === 'string') {\n    TRANSITION = 'transition';\n    TRANSITIONEND = 'transitionend';\n    TRANSITION_CSS = 'transition';\n} else if (typeof document.body.style.webkitTransition === 'string') {\n    TRANSITION = 'WebkitTransition';\n    TRANSITION_CSS = '-webkit-transition';\n    TRANSITIONEND = 'webkitTransitionEnd';\n}\n\nlet TRANSFORM = null;\nlet TRANSFORM_CSS = null;\nif (typeof document.body.style.transform === 'string') {\n    TRANSFORM = 'transform';\n    TRANSFORM_CSS = 'transform';\n} else if (typeof document.body.style.webkitTransform === 'string') {\n    TRANSFORM = 'WebkitTransform';\n    TRANSFORM_CSS = '-webkit-transform';\n}\n\nexport {\n    TRANSITION,\n    TRANSITIONEND,\n    TRANSITION_CSS,\n    TRANSFORM,\n    TRANSFORM_CSS,\n};\n","\n/**\n * @module Date组件\n */\nimport React, { Component, PropTypes } from 'react';\nimport * as TimeUtil from './time.js';\nimport {\n    TRANSITION,\n    TRANSFORM,\n} from './transition';\n\n/**\n * Class Date组件类\n * @extends Component\n */\nclass DatePickerItem extends Component {\n    constructor(props) {\n        super(props);\n        this.animating = false;     // 判断是否在transition过渡动画之中\n        this.touchY = 0;            // 保存touchstart的pageY\n        this.angle = 0;             // 容器转过的角度\n        this.renderDatepickerItem = this.renderDatepickerItem.bind(this);\n        this.handleContentTouch = this.handleContentTouch.bind(this);\n        this.handleContentTransitionEnd = this.handleContentTransitionEnd.bind(this);\n        this.state = {\n            angle: 0,\n        };\n    }\n\n    componentWillMount() {\n        const dates = Array(...Array(5)).map((value, index) => {\n            const date = TimeUtil[`next${this.props.typeName}`](this.props.date.value, index - 2);\n            return {\n                ...TimeUtil.getTime(date, this.props.typeName),\n                angle: (2 - index) * 22.5,\n            };\n        });\n        this.setState({ dates });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // 更新同级的组件日期视图\n        const scroll = this.refs.scroll;\n        const angle = this.angle;\n        const typeName = this.props.typeName;\n        const nowVal = this.props.date[typeName].value;\n        const nextVal = nextProps.date[typeName].value;\n        const nowstamp = this.props.date.timestamp;\n        const nextstamp = nextProps.date.timestamp;\n\n        let direction;\n        if ((nextVal > nowVal && nextstamp > nowstamp) ||\n        (nextVal < nowVal && nextstamp > nowstamp)) direction = 1;\n        else if ((nextVal > nowVal && nextstamp < nowstamp) ||\n        (nextVal < nowVal && nextstamp < nowstamp)) direction = -1;\n        if (direction) {\n            this._moveTo(scroll, angle + direction * 22.5);\n        }\n    }\n\n    /**\n     * 根据角度返回透明度(0-1之间)\n     * @param {number} angle 角度\n     * @return\n     */\n    _setOpacity(angle) {\n        return angle > 0\n            ? ((40 - angle) / 40 * 100 | 0) / 100\n            : ((40 + angle) / 40 * 100 | 0) / 100;\n    }\n\n    /**\n     * 清除对象的transition样式\n     * @param  {Dom}     obj     指定的对象\n     * @return {undefined}\n     */\n    _clearTransition(obj) {\n        obj.style[TRANSITION] = ''; // eslint-disable-line\n    }\n\n    /**\n     * 滑动到下一日期\n     * @param  {number} direction 滑动方向\n     * @return {undefined}\n     */\n    _moveToNext(direction) {\n        const { typeName, date, maxDate, minDate } = this.props;\n        const nextDate = TimeUtil[`next${typeName}`](date.value, direction);\n        const canMove = (direction === 1) ?\n            (nextDate.getTime() <= maxDate.timestamp) :\n            (nextDate.getTime() >= minDate.timestamp);\n        if (canMove) {\n            this.props.onSelect(nextDate);\n        } else {\n            this._moveTo(this.refs.scroll, this.angle);\n        }\n    }\n\n    /**\n     * 添加滑动动画\n     * @param  {DOM} obj   DOM对象\n     * @param  {number} angle 角度\n     * @return {undefined}\n     */\n    _moveTo(obj, angle) {\n        this.animating = true;\n        obj.style[TRANSITION] = `all .2s ease-out`; // eslint-disable-line\n        this.setState({\n            angle,\n        });\n    }\n\n\n    /**\n     * 滑动日期选择器事件\n     * @param  {Object} event 事件对象\n     * @return {undefined}\n     */\n    handleContentTouch(event) {\n        event.preventDefault();\n        if (this.animating) return;\n        if (event.type === 'touchstart') {\n            this.touchY = event.targetTouches[0].pageY;\n            this.angle = this.state.angle;\n        } else if (event.type === 'touchmove') {\n            const touchY = event.targetTouches[0].pageY;\n            const dir = touchY - this.touchY;\n            const angle = this.angle - parseInt(22.5 * dir / 180, 10);\n            this.setState({ angle });\n        } else if (event.type === 'touchend') {\n            const touchY = event.changedTouches[0].pageY;\n            const dir = touchY - this.touchY;\n            const direction = dir > 0 ? -1 : 1;\n            if ((direction === 1 && this.props.touchLen < -dir) ||\n                (direction === -1 && this.props.touchLen < dir)) {\n                this._moveToNext(direction);\n            } else {\n                this._moveTo(this.refs.scroll, this.angle);\n            }\n        }\n    }\n\n    /**\n     * transition过渡完成事件\n     * @return {undefined}\n     */\n    handleContentTransitionEnd() {\n        const date = this.props.date;\n        const newDates = Array(...Array(5)).map((value, index) => {\n            const now = TimeUtil[`next${this.props.typeName}`](date.value, index - 2);\n            return {\n                ...TimeUtil.getTime(now, this.props.typeName),\n                angle: (2 - index) * 22.5,\n            };\n        });\n\n        this.animating = false;\n        this._clearTransition(this.refs.scroll);\n        this.setState({\n            dates: newDates,\n            angle: 0,\n        });\n    }\n\n    /**\n     * 渲染一个日期DOM对象\n     * @param  {Object} date date数据\n     * @return {Object}      JSX对象\n     */\n    renderDatepickerItem(date, index) {\n        const itemStyle = {\n            [TRANSFORM]: `rotateX(${date.angle}deg) translate3d(0,0,100px)`,\n            opacity: this._setOpacity(date.angle + this.state.angle),\n            color: this.props.dateColor,\n        };\n        return (\n            <li\n                key={index}\n                style={itemStyle}>\n                {date.value}{date.suffix}\n            </li>\n        );\n    }\n\n    render() {\n        const scrollStyle = {\n            [TRANSFORM]: `rotateX(${this.state.angle}deg)`,\n        };\n\n        return (\n            <div\n                className=\"datepicker-viewport\"\n                onTouchStart={this.handleContentTouch}\n                onTouchMove={this.handleContentTouch}\n                onTouchEnd={this.handleContentTouch}\n                onTransitionEnd={this.handleContentTransitionEnd}>\n                <ul\n                    ref=\"scroll\"\n                    className=\"datepicker-scroll\"\n                    style={scrollStyle}>\n                    {this.state.dates.map(this.renderDatepickerItem)}\n                </ul>\n            </div>\n        );\n    }\n}\n\nDatePickerItem.propTypes = {\n    date: PropTypes.object,\n    minDate: PropTypes.object,\n    maxDate: PropTypes.object,\n    typeName: PropTypes.string,\n    touchLen: PropTypes.number,\n    dateColor: PropTypes.string,\n    onSelect: PropTypes.func,\n};\n\nexport default DatePickerItem;\n","/**\n * @module DatePicker组件\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport DatePickerItem from './DatePickerItem.js';\nimport { nextDate, getTime } from './time.js';\n\n/**\n * Class DatePicker组件类\n * @extends Component\n */\nclass DatePicker extends Component {\n    constructor(props) {\n        super(props); // 容器转过的角度\n        this.state = {\n            date: this._productDate(props.date),\n            minDate: this._productDate(props.minDate),\n            maxDate: this._productDate(props.maxDate),\n        };\n\n        this.handleFinishBtnClick = this.handleFinishBtnClick.bind(this);\n        this.handleDateSelect = this.handleDateSelect.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            date: this._productDate(nextProps.date),\n            minDate: this._productDate(nextProps.minDate),\n            maxDate: this._productDate(nextProps.maxDate),\n        });\n    }\n\n    _productDate(date) {\n        const nDate = nextDate(date, 0);\n        return {\n            value: nDate,\n            timestamp: nDate.getTime(),\n            Year: getTime(nDate, 'Year'),\n            Month: getTime(nDate, 'Month'),\n            Date: getTime(nDate, 'Date'),\n        };\n    }\n\n    /**\n     * 点击完成按钮事件\n     * @return {undefined}\n     */\n    handleFinishBtnClick() {\n        this.props.onSelect(this.state.date.value);\n    }\n\n    /**\n     * 选择下一个日期\n     * @return {undefined}\n     */\n    handleDateSelect(date) {\n        this.setState({ date: this._productDate(date) });\n    }\n\n    /**\n     * render函数\n     * @return {Object} JSX对象\n     */\n    render() {\n        const { layerBackground, btnColor, touchLen, dateColor } = this.props;\n        const { date, minDate, maxDate } = this.state;\n        const datePickerStyle = {\n            backgroundColor: layerBackground,\n        };\n\n        return (\n            <div\n                className=\"datepicker\"\n                style={datePickerStyle}>\n                <p className=\"datepicker-navbar\">\n                    <span\n                        style={{ color: btnColor }}\n                        className=\"datepicker-finish-btn\"\n                        onClick={this.handleFinishBtnClick}>完成</span>\n                </p>\n                <div className=\"datepicker-content\">\n                    <DatePickerItem\n                        date={date}\n                        typeName=\"Year\"\n                        minDate={minDate}\n                        maxDate={maxDate}\n                        touchLen={touchLen}\n                        dateColor={dateColor}\n                        onSelect={this.handleDateSelect} />\n                    <DatePickerItem\n                        date={date}\n                        typeName=\"Month\"\n                        minDate={minDate}\n                        maxDate={maxDate}\n                        touchLen={touchLen}\n                        dateColor={dateColor}\n                        onSelect={this.handleDateSelect} />\n                    <DatePickerItem\n                        date={date}\n                        typeName=\"Date\"\n                        minDate={minDate}\n                        maxDate={maxDate}\n                        touchLen={touchLen}\n                        dateColor={dateColor}\n                        onSelect={this.handleDateSelect} />\n                </div>\n            </div>\n        );\n    }\n }\n\nDatePicker.propTypes = {\n    touchLen: PropTypes.number,\n    btnColor: PropTypes.string,\n    dateColor: PropTypes.string,\n    layerBackground: PropTypes.string,\n    date: PropTypes.object,\n    minDate: PropTypes.object,\n    maxDate: PropTypes.object,\n    onSelect: PropTypes.func,\n};\n\n\nexport default DatePicker;\n","import React, { Component, PropTypes } from 'react';\nimport ReactDOM from 'react-dom';\nconst renderSubtreeIntoContainer = ReactDOM.unstable_renderSubtreeIntoContainer;\n\n\nclass Modal extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n        isOpen: PropTypes.bool,\n    }\n\n    static defaultProps = {\n        isOpen: false,\n    }\n\n    componentDidMount() {\n        this._div = document.createElement('div');\n        this._div.classList.add('Modal-Portal');\n        document.body.appendChild(this._div);\n        this.renderPortal(this.props);\n    }\n\n    componentWillReceiveProps(newProps) {\n        this.renderPortal(newProps);\n    }\n\n    componentWillUnmount() {\n        ReactDOM.unmountComponentAtNode(this._div);\n        this._div.parentNode.removeChild(this._div);\n    }\n\n    renderPortal(props) {\n        const portal =\n        React.cloneElement(this.props.children, { ...props, key: 'portal' }, null);\n\n        this.portal =\n        renderSubtreeIntoContainer(this, portal, this._div);\n    }\n\n    render() {\n        return (<noscript / >);\n    }\n}\n\nexport default Modal;\n"]}